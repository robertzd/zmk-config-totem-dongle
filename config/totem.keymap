//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <keys_nb.h>

#define Base        0
#define Media       1
#define Nav         2
#define Mouse       3
#define Sym         4
#define Num         5
#define Fun         6
#define Button      7
#define Game        8
#define Gameplus    9

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        mac_tap_aa: mac_tap_aa {
            compatible = "zmk,behavior-hold-tap";
            label = "MAC_TAP_AA";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&macro_aa>, <&kp>;
        };

        mac_tap_ae: mac_tap_ae {
            compatible = "zmk,behavior-hold-tap";
            label = "MAC_TAP_AE";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&macro_ae>, <&kp>;
        };

        mactap_oo: mactap_oo {
            compatible = "zmk,behavior-hold-tap";
            label = "MACTAP_OO";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            bindings = <&macro_oo>, <&kp>;
        };
    };

    combos { compatible = "zmk,combos"; };

    macros {
        macro_aa: macro_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N9>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "MACRO_A";
            wait-ms = <30>;
            tap-ms = <40>;
        };

        macro_ae: macro_ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp KP_N1 &kp KP_N5 &kp KP_N6>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "MACRO_AE";
            wait-ms = <30>;
            tap-ms = <40>;
        };

        macro_oo: macro_oo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_N0 &kp LS(KP_N2) &kp KP_N4 &kp KP_N8>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "MACRO_OO";
            wait-ms = <30>;
            tap-ms = <40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            label = "Base";
            bindings = <
              &kp Q            &kp W       &mac_tap_ae 0 E  &kp R         &kp T        &kp Y    &kp U        &kp I        &mactap_oo 0 O  &kp APOSTROPHE
              &mac_tap_aa 0 A  &hm LALT S  &hm LCTRL D      &hm LSHIFT F  &kp G        &kp H    &hm RSHFT J  &hm RCTRL K  &hm RALT L      &kp P
&lt 4 ESCAPE  &kp Z            &kp X       &kp C            &kp V         &kp B        &kp N    &kp M        &kp COMMA    &kp DOT         &kp MINUS       &kp SLASH
                                           &kp LEFT_WIN     &lt 1 TAB     &kp SPACE    &kp RET  &lt 2 BSPC   &kp DELETE
            >;
        };

        NNav {
            label = "NNav";
            bindings = <
            &kp NUMBER_1     &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4    &kp NUMBER_5    &kp NUMBER_6    &kp NUMBER_7    &kp NUMBER_8  &kp NUMBER_9     &kp NUMBER_0
            &kp LEFT_WIN     &kp LEFT_ALT  &kp RCTRL     &kp LEFT_SHIFT  &kp PERIOD      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp KP_PLUS
&kp ESCAPE  &kp PRINTSCREEN  &kp INSERT    &kp K_CUT     &kp K_COPY      &kp K_PASTE     &kp HOME        &kp PAGE_DOWN   &kp PG_UP     &kp END          &kp KP_MULTIPLY  &kp KP_MINUS
                                           &trans        &trans          &trans          &trans          &trans          &trans
            >;
        };

        Sym {
            label = "Sym";
            bindings = <
         &kp EXCL  &kp DOUBLE_QUOTES  &kp HASH  &none       &kp PERCENT     &kp AMPERSAND   &kp SLASH         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp EQUAL
         &kp PIPE  &kp AT_SIGN        &none     &kp DOLLAR  &kp QUESTION    &kp LEFT_BRACE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET     &kp RIGHT_BRACE        &kp PLUS
&kp ESC  &none     &trans             &trans    &kp TILDE   &trans          &kp SEMICOLON   &kp COLON         &kp CARET             &none                  &kp BACKSLASH  &kp HOME
                                      &trans    &trans      &trans          &trans          &trans            &trans
            >;
        };

        Sys {
            bindings = <
            &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0    &trans  &trans            &trans             &trans        &trans
            &trans        &trans        &trans        &trans        &trans          &trans  &kp C_MUTE        &kp C_VOLUME_DOWN  &kp C_VOL_UP  &trans
&bt BT_CLR  &trans        &trans        &trans        &trans        &trans          &trans  &kp C_PLAY_PAUSE  &kp C_PREVIOUS     &kp C_NEXT    &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans            &trans
            >;

            label = "Sys";
        };

        Fun {
            bindings = <
        &trans  &trans  &trans  &trans  &to 0     &kp F1  &kp F2   &kp F3   &kp F4   &trans
        &trans  &trans  &trans  &trans  &to 5     &kp F5  &kp F6   &kp F7   &kp F8   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp F9  &kp F10  &kp F11  &kp F12  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans   &trans
            >;

            label = "Fun";
        };

        Gaming {
            bindings = <
            &kp PIPE        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &sl 4     &trans  &trans  &trans  &trans  &trans
            &kp TAB         &kp Q         &kp W         &kp E         &kp R     &trans  &trans  &trans  &trans  &trans
&kp ESCAPE  &kp LEFT_SHIFT  &kp A         &kp S         &kp D         &kp F     &trans  &trans  &trans  &trans  &trans  &trans
                                          &kp LCTRL     &kp LEFT_ALT  &trans    &trans  &trans  &trans
            >;

            label = "Gaming";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        two_three_to_sys {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
